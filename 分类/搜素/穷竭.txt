1.最简单的穷竭搜索
DFS   深度优先算法   ，从某个状态开始不断转移直到无法转移，回退到前一步 的状态，再转移到其他状态，直到找到答案。  隐式利用栈     根据其特点用递归实现。
BFS    宽度优先，先搜索离初始状态近的，开始状态，只需一次转移的状态，2次。。。只经过一次，O(状态数*转移方式）      隐式利用队列   初始状态加入队列，然后从前端不断取出，把该状态可以转移的，尚未被访问过的加入队列。
多数情况用DFS因为递归更好写，状态管理更简单；BFS求最短路时好用
BFS会先把状态入队列，内存空间与状态数成正比；DFS与最大递归深度成正比；故DFS更节省内存
判断dfs还是bfs，就根据上述；一般dfs
IDDFS迭代加深深度优先算法。在4.5

剪枝，当前状态无论如何转移都无解，直接跳过
